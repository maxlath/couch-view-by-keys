#!/usr/bin/env node
const program = require('commander')
const URL = require('url')

program
.option('-d, --debug', 'Debug')
.option('-n, --ndjson', 'Log as NDJSON')
.option('-j, --json [indentation]', 'JSON indentation')
.option('-k, --keep <attributes>', 'Pick attributes to keep')
.parse(process.argv)

if (program.args.length === 0) return program.help()

const { debug, ndjson, json, keep } = program
const indentation = /^\d+$/.test(json) ? parseInt(json) : 0

var [ url, ...keys ] = program.args

var { protocol, auth, hostname, port, query, pathname } = URL.parse(url, true)
protocol = protocol.replace(':', '')

var username, password
if (auth) {
  var [ username, ...password ] = auth.split(':')
  password = password.join(':')
}

const viewPathnamePattern = /\/([\w-_]+)\/_design\/([\w-_]+)\/_view\/([\w-_]+)/
const allDocsPathnamePattern = /\/([\w-_]+)\/(_all_docs)/
const pathnameData = url.match(viewPathnamePattern) || url.match(allDocsPathnamePattern)

if (!pathnameData) {
  console.error("the provided URL didn't match the CouchDB view URL pattern")
  process.exit(1)
}

let [ match, dbName, designDocName, viewName ] = pathnameData

let allDocsMode = false
if (designDocName === '_all_docs') {
  designDocName = null
  viewName = null
  allDocsMode = true
}

const config = { protocol, hostname, port, username, password, debug }

const db = require('blue-cot')(config)(dbName, designDocName)

keys = keys.map(require('../lib/parse_key'))

// Default to ndjson
const logger = json ? require('../lib/json')(indentation) : require('../lib/ndjson')

const keeper = require('../lib/keep')(keep)

query = require('../lib/parse_query_and_apply_defaults')(query)

const getRows = require('../lib/get_rows')

getRows({ db, designDocName, viewName, query, allDocsMode, keys })
.then(keeper)
.then(logger)
.catch(console.error)

// Prevent logging an EPIPE error when piping the output
// cf https://github.com/maxlath/wikidata-cli/issues/7
process.stdout.on('error', function (err) {
  if (err.code !== 'EPIPE') throw err
})
